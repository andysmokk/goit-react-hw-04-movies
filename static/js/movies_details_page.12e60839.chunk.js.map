{"version":3,"sources":["pages/MovieDetailsPage/MovieDetailsPage.jsx"],"names":["Cast","lazy","Reviews","MovieDetailsPage","match","useRouteMatch","history","useHistory","location","useLocation","movieId","useParams","useState","movie","setMovie","useEffect","moviesAPI","fetchMovieDetail","then","type","onClick","push","state","from","label","src","poster_path","alt","title","release_date","substring","vote_average","overview","genres","map","genre","name","id","to","pathname","url","fallback","path"],"mappings":"wOAKMA,EAAOC,gBAAK,kBAChB,gCAEIC,EAAUD,gBAAK,kBACnB,gCAOa,SAASE,IAAoB,IAAD,MACnCC,EAAQC,cACRC,EAAUC,cACVC,EAAWC,cACTC,EAAYC,cAAZD,QACR,EAA0BE,mBAAS,MAAnC,mBAAOC,EAAP,KAAcC,EAAd,KAEAC,qBAAU,WACRC,IAAUC,iBAAiBP,GAASQ,MAAK,SAAAL,GAAK,OAAIC,EAASD,QAC1D,CAACH,IAOJ,OACE,qCACE,wBAAQS,KAAK,SAASC,QAPJ,WAAO,IAAD,MAC1Bd,EAAQe,KAAR,iBAAab,QAAb,IAAaA,GAAb,UAAaA,EAAUc,aAAvB,iBAAa,EAAiBC,YAA9B,aAAa,EAAuBf,gBAApC,QAAgD,MAM9C,0BACGA,QADH,IACGA,GADH,UACGA,EAAUc,aADb,iBACG,EAAiBC,YADpB,aACG,EAAuBC,aAD1B,QACmC,YAElCX,GACC,gCACE,qBAAKY,IAAG,UAzBG,mCAyBH,OAAoBZ,EAAMa,aAAeC,IAAI,KACrD,gCACE,+BACGd,EAAMe,MAAO,IACbf,EAAMgB,aAAN,WACOhB,EAAMgB,aAAaC,UAAU,EAAG,GADvC,KAEGjB,EAAMgB,gBAEZ,6CAAgBhB,EAAMkB,gBACtB,0CACA,4BAAIlB,EAAMmB,WACV,wCACA,8BACGnB,EAAMoB,QACLpB,EAAMoB,OAAOC,KAAI,SAAAC,GAAK,OACpB,6BACE,6BAAKA,EAAMC,QADJD,EAAME,eAQ3B,uBACA,gCACE,wDACA,+BACE,6BACE,cAAC,IAAD,CACEC,GAAI,CACFC,SAAS,GAAD,OAAKnC,EAAMoC,IAAX,SACRlB,MAAO,CACLC,KAAM,CAAEf,WAAUgB,MAAO,aAJ/B,oBAWF,6BACE,cAAC,IAAD,CACEc,GAAI,CACFC,SAAS,GAAD,OAAKnC,EAAMoC,IAAX,YACRlB,MAAO,CACLC,KAAM,CAAEf,WAAUgB,MAAO,aAJ/B,0BAYJ,0BAGF,cAAC,WAAD,CAAUiB,SAAU,4CAApB,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAI,UAAKtC,EAAMsC,KAAX,SAAX,SACE,cAAC1C,EAAD,CAAMU,QAASA,MAGjB,cAAC,IAAD,CAAOgC,KAAI,UAAKtC,EAAMsC,KAAX,YAAX,SACE,cAACxC,EAAD,CAASQ,QAASA","file":"static/js/movies_details_page.12e60839.chunk.js","sourcesContent":["import { useState, useEffect, lazy, Suspense } from 'react';\r\nimport { Route, Switch, useParams } from 'react-router';\r\nimport { Link, useRouteMatch, useHistory, useLocation } from 'react-router-dom';\r\nimport moviesAPI from '../../services/moviesApi';\r\n\r\nconst Cast = lazy(() =>\r\n  import('../../components/Cast/Cast' /* webpackChunkName: \"cast_page\" */),\r\n);\r\nconst Reviews = lazy(() =>\r\n  import(\r\n    '../../components/Reviews/Reviews' /* webpackChunkName: \"reviews_page\" */\r\n  ),\r\n);\r\n\r\nconst BASE_IMG_URL = 'https://image.tmdb.org/t/p/w500';\r\n\r\nexport default function MovieDetailsPage() {\r\n  const match = useRouteMatch();\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n  const { movieId } = useParams();\r\n  const [movie, setMovie] = useState(null);\r\n\r\n  useEffect(() => {\r\n    moviesAPI.fetchMovieDetail(movieId).then(movie => setMovie(movie));\r\n  }, [movieId]);\r\n\r\n  const onClickGoBack = () => {\r\n    history.push(location?.state?.from?.location ?? '/');\r\n    // history.goBack();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <button type=\"submit\" onClick={onClickGoBack}>\r\n        {location?.state?.from?.label ?? 'GO BACK'}\r\n      </button>\r\n      {movie && (\r\n        <div>\r\n          <img src={`${BASE_IMG_URL}${movie.poster_path}`} alt=\"\" />\r\n          <div>\r\n            <h1>\r\n              {movie.title}{' '}\r\n              {movie.release_date\r\n                ? `(${movie.release_date.substring(0, 4)})`\r\n                : movie.release_date}\r\n            </h1>\r\n            <p>User Score: {movie.vote_average}</p>\r\n            <h2>Overview</h2>\r\n            <p>{movie.overview}</p>\r\n            <h2>Genres</h2>\r\n            <div>\r\n              {movie.genres &&\r\n                movie.genres.map(genre => (\r\n                  <ul key={genre.id}>\r\n                    <li>{genre.name}</li>\r\n                  </ul>\r\n                ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n      <hr />\r\n      <div>\r\n        <h2>Additional information</h2>\r\n        <ul>\r\n          <li>\r\n            <Link\r\n              to={{\r\n                pathname: `${match.url}/cast`,\r\n                state: {\r\n                  from: { location, label: 'GO BACK' },\r\n                },\r\n              }}\r\n            >\r\n              Cast\r\n            </Link>\r\n          </li>\r\n          <li>\r\n            <Link\r\n              to={{\r\n                pathname: `${match.url}/reviews`,\r\n                state: {\r\n                  from: { location, label: 'GO BACK' },\r\n                },\r\n              }}\r\n            >\r\n              Reviews\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n        <hr />\r\n      </div>\r\n\r\n      <Suspense fallback={<h2>Loading...</h2>}>\r\n        <Switch>\r\n          <Route path={`${match.path}/cast`}>\r\n            <Cast movieId={movieId} />\r\n          </Route>\r\n\r\n          <Route path={`${match.path}/reviews`}>\r\n            <Reviews movieId={movieId} />\r\n          </Route>\r\n        </Switch>\r\n      </Suspense>\r\n    </>\r\n  );\r\n}\r\n"],"sourceRoot":""}