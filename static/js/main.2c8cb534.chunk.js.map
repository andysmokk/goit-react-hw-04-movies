{"version":3,"sources":["components/Navigation/Navigation.module.css","components/Navigation/Navigation.jsx","services/moviesApi.js","pages/HomePage/HomePage.jsx","pages/MoviesPage/MoviesPage.jsx","pages/NotFoundPage/NotFoundPage.jsx","components/Cast/Cast.jsx","components/Reviews/Reviews.jsx","pages/MovieDetailsPage/MovieDetailsPage.jsx","App.js","index.js"],"names":["module","exports","Navigation","exact","to","className","s","link","activeClassName","activeLink","KEY","BASE_URL","api","fetchTrendingMovies","fetch","then","response","json","fetchMovie","query","fetchMovieDetail","id","fetchMovieCast","fetchMovieReviews","HomePage","location","useLocation","useState","movies","setMovies","useEffect","moviesAPI","results","map","movie","pathname","state","from","label","title","release_date","substring","MoviesPage","history","useHistory","movieName","setMovieName","console","log","getQuery","URLSearchParams","search","get","onSubmit","e","preventDefault","target","value","push","defaultValue","type","autoComplete","autoFocus","placeholder","NotFoundPage","Cast","movieId","casts","setCasts","data","cast","length","profile_path","src","alt","name","width","character","Reviews","reviews","setReviews","review","author","content","MovieDetailsPage","match","useRouteMatch","useParams","setMovie","onClick","poster_path","vote_average","overview","genres","genre","url","path","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2c8cb534.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"Navigation_link__1VrIW\",\"activeLink\":\"Navigation_activeLink__3J6XK Navigation_link__1VrIW\"};","import { NavLink } from 'react-router-dom';\r\nimport s from './Navigation.module.css';\r\n\r\nconst Navigation = () => (\r\n  <>\r\n    <nav>\r\n      <NavLink exact to=\"/\" className={s.link} activeClassName={s.activeLink}>\r\n        Home\r\n      </NavLink>\r\n      <NavLink to=\"/movies\" className={s.link} activeClassName={s.activeLink}>\r\n        Movies\r\n      </NavLink>\r\n    </nav>\r\n    <hr />\r\n  </>\r\n);\r\n\r\nexport default Navigation;\r\n","const KEY = '80c40df4ca7e037eb588a248bc1cafa9';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nfunction fetchTrendingMovies() {\n  return fetch(`${BASE_URL}/trending/movie/day?api_key=${KEY}`).then(response =>\n    response.json(),\n  );\n}\n\nfunction fetchMovie(query) {\n  return fetch(\n    `${BASE_URL}/search/movie?query=${query}&language=en-US&api_key=${KEY}`,\n  ).then(response => response.json());\n}\n\nfunction fetchMovieDetail(id) {\n  return fetch(`${BASE_URL}/movie/${id}?language=en-US&api_key=${KEY}`).then(\n    response => response.json(),\n  );\n}\n\nfunction fetchMovieCast(id) {\n  return fetch(\n    `${BASE_URL}/movie/${id}/credits?language=en-US&api_key=${KEY}`,\n  ).then(response => response.json());\n}\n\nfunction fetchMovieReviews(id) {\n  return fetch(\n    `${BASE_URL}/movie/${id}/reviews?language=en-US&api_key=${KEY}`,\n  ).then(response => response.json());\n}\n\nconst api = {\n  fetchTrendingMovies,\n  fetchMovie,\n  fetchMovieDetail,\n  fetchMovieCast,\n  fetchMovieReviews,\n};\n\nexport default api;\n","import { useState, useEffect } from 'react';\r\nimport { Link, useLocation } from 'react-router-dom';\r\nimport moviesAPI from '../../services/moviesApi';\r\n\r\nexport function HomePage() {\r\n  const location = useLocation();\r\n  const [movies, setMovies] = useState(null);\r\n\r\n  useEffect(() => {\r\n    moviesAPI.fetchTrendingMovies().then(movies => setMovies(movies.results));\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <h1>Trending today</h1>\r\n      <ul>\r\n        {movies &&\r\n          movies.map(movie => (\r\n            <li key={movie.id}>\r\n              <Link\r\n                to={{\r\n                  pathname: `/movies/${movie.id}`,\r\n                  state: {\r\n                    from: {\r\n                      location,\r\n                      label: 'GO HOME PAGE',\r\n                    },\r\n                  },\r\n                }}\r\n              >\r\n                {movie.title}{' '}\r\n                {movie.release_date\r\n                  ? `(${movie.release_date.substring(0, 4)})`\r\n                  : movie.release_date}\r\n              </Link>\r\n            </li>\r\n          ))}\r\n      </ul>\r\n    </>\r\n  );\r\n}\r\n","import { useState } from 'react';\r\nimport { Link, useHistory, useLocation } from 'react-router-dom';\r\nimport { useEffect } from 'react';\r\n// import s from './MoviesPage.module.css';\r\nimport moviesAPI from '../../services/moviesApi';\r\n\r\nexport function MoviesPage() {\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n  const [movieName, setMovieName] = useState('');\r\n  const [movies, setMovies] = useState([]);\r\n\r\n  console.log(history);\r\n  console.log(location);\r\n\r\n  const getQuery = new URLSearchParams(location.search).get('query');\r\n  console.log(getQuery);\r\n  console.log(location.search);\r\n\r\n  useEffect(() => {\r\n    if (!movieName) {\r\n      return;\r\n    }\r\n    moviesAPI.fetchMovie(movieName).then(movies => setMovies(movies.results));\r\n  }, [movieName]);\r\n  // useEffect(() => {\r\n  //   if (!movieName) {\r\n  //     return;\r\n  //   }\r\n  //   moviesAPI.fetchMovie(movieName).then(movies => setMovies(movies.results));\r\n  // }, []);\r\n\r\n  const onSubmitForm = e => {\r\n    e.preventDefault();\r\n    // console.log(e.target[0].value);\r\n    setMovieName(e.target[0].value);\r\n\r\n    history.push({\r\n      ...location,\r\n      search: `query=${e.target[0].value}`,\r\n    });\r\n    // if (!movieName) {\r\n    //   return;\r\n    // }\r\n    // moviesAPI.fetchMovie(movieName).then(movies => setMovies(movies.results));\r\n  };\r\n\r\n  console.log(movieName);\r\n  // const onChangeMovieName = ({ target }) => {\r\n  //   setMovieName(target.value);\r\n  //   history.push({\r\n  //     ...location,\r\n  //     search: `query=${target.value}`,\r\n  //   });\r\n  // };\r\n  // console.log(movies);\r\n  return (\r\n    <>\r\n      <form onSubmit={onSubmitForm}>\r\n        <input\r\n          // name=\"movieName\"\r\n          defaultValue={movieName}\r\n          type=\"text\"\r\n          autoComplete=\"off\"\r\n          autoFocus\r\n          placeholder=\"Search movie\"\r\n          // onChange={onChangeMovieName}\r\n        />\r\n        <button type=\"submit\">\r\n          <span>Search</span>\r\n        </button>\r\n      </form>\r\n      <ul>\r\n        {movies &&\r\n          movies.map(movie => (\r\n            <li key={movie.id}>\r\n              <Link\r\n                to={{\r\n                  pathname: `/movies/${movie.id}`,\r\n                  state: {\r\n                    from: {\r\n                      location,\r\n                      label: 'GO MOVIES PAGE',\r\n                    },\r\n                  },\r\n                }}\r\n              >\r\n                {movie.title}{' '}\r\n                {movie.release_date\r\n                  ? `(${movie.release_date.substring(0, 4)})`\r\n                  : movie.release_date}\r\n              </Link>\r\n            </li>\r\n          ))}\r\n      </ul>\r\n    </>\r\n  );\r\n}\r\n","export function NotFoundPage() {\r\n  return <h1>404 Страница не найдена</h1>;\r\n}\r\n","// import { Link } from 'react-router-dom';\r\n// import { useParams } from 'react-router';\r\nimport { useState, useEffect } from 'react';\r\nimport moviesAPI from '../../services/moviesApi';\r\n\r\nconst BASE_IMG_URL_CAST = 'https://image.tmdb.org/t/p/w300';\r\n\r\nfunction Cast({ movieId }) {\r\n  //   const { movieId } = useParams();\r\n  const [casts, setCasts] = useState([]);\r\n\r\n  useEffect(() => {\r\n    moviesAPI.fetchMovieCast(movieId).then(data => setCasts(data.cast));\r\n  }, [movieId]);\r\n\r\n  console.log(casts);\r\n\r\n  return casts.length !== 0 ? (\r\n    <ul>\r\n      {casts &&\r\n        casts.map(cast => (\r\n          <li key={cast.id}>\r\n            {cast.profile_path ? (\r\n              <img\r\n                src={`${BASE_IMG_URL_CAST}${cast.profile_path}`}\r\n                alt={cast.name}\r\n              />\r\n            ) : (\r\n              <img\r\n                src=\"https://www.themoviedb.org/assets/2/v4/logos/v2/blue_square_2-d537fb228cf3ded904ef09b136fe3fec72548ebc1fea3fbbd1ad9e36364db38b.svg\"\r\n                alt=\"default_img\"\r\n                width=\"300\"\r\n              />\r\n            )}\r\n            <p>Character: {cast.character}</p>\r\n            <p>{cast.name}</p>\r\n          </li>\r\n        ))}\r\n    </ul>\r\n  ) : (\r\n    <p>No information</p>\r\n  );\r\n}\r\n\r\nexport default Cast;\r\n","import { useState, useEffect } from 'react';\r\nimport moviesAPI from '../../services/moviesApi';\r\n\r\nfunction Reviews({ movieId }) {\r\n  const [reviews, setReviews] = useState([]);\r\n\r\n  useEffect(() => {\r\n    moviesAPI.fetchMovieReviews(movieId).then(data => setReviews(data.results));\r\n  }, [movieId]);\r\n\r\n  console.log(reviews);\r\n\r\n  return reviews.length !== 0 ? (\r\n    <ul>\r\n      {reviews.map(review => (\r\n        <li key={review.id}>\r\n          <p>{review.author}</p>\r\n          <p>{review.content}</p>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  ) : (\r\n    <p>We don't have any reviews for this movie</p>\r\n  );\r\n}\r\n\r\nexport default Reviews;\r\n","import { useState, useEffect } from 'react';\r\nimport { Route, Switch, useParams } from 'react-router';\r\nimport { Link, useRouteMatch, useHistory, useLocation } from 'react-router-dom';\r\nimport moviesAPI from '../../services/moviesApi';\r\nimport Cast from '../../components/Cast/Cast';\r\nimport Reviews from '../../components/Reviews/Reviews';\r\n\r\nconst BASE_IMG_URL = 'https://image.tmdb.org/t/p/w500';\r\n\r\nexport function MovieDetailsPage() {\r\n  const match = useRouteMatch();\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n  const { movieId } = useParams();\r\n  const [movie, setMovie] = useState(null);\r\n\r\n  // console.log(history);\r\n  // console.log(location);\r\n\r\n  useEffect(() => {\r\n    moviesAPI.fetchMovieDetail(movieId).then(movie => setMovie(movie));\r\n  }, [movieId]);\r\n\r\n  // console.log(movie);\r\n\r\n  const onClickGoBack = () => {\r\n    history.push(location?.state?.from?.location ?? '/');\r\n    // history.goBack();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <button type=\"submit\" onClick={onClickGoBack}>\r\n        {location?.state?.from?.label ?? 'GO BACK'}\r\n      </button>\r\n      {movie && (\r\n        <div>\r\n          <img src={`${BASE_IMG_URL}${movie.poster_path}`} alt=\"\" />\r\n          <div>\r\n            <h1>\r\n              {movie.title}{' '}\r\n              {movie.release_date\r\n                ? `(${movie.release_date.substring(0, 4)})`\r\n                : movie.release_date}\r\n            </h1>\r\n            <p>User Score: {movie.vote_average}</p>\r\n            <h2>Overwiew</h2>\r\n            <p>{movie.overview}</p>\r\n            <h2>Genres</h2>\r\n            <div>\r\n              {movie.genres &&\r\n                movie.genres.map(genre => (\r\n                  <ul key={genre.id}>\r\n                    <li>{genre.name}</li>\r\n                  </ul>\r\n                ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n      <hr />\r\n      <div>\r\n        <h2>Additional information</h2>\r\n        <ul>\r\n          <li>\r\n            <Link\r\n              to={{\r\n                pathname: `${match.url}/cast`,\r\n                state: {\r\n                  from: { location, label: 'GO BACK' },\r\n                },\r\n              }}\r\n            >\r\n              Cast\r\n            </Link>\r\n          </li>\r\n          <li>\r\n            <Link\r\n              to={{\r\n                pathname: `${match.url}/reviews`,\r\n                state: {\r\n                  from: { location, label: 'GO BACK' },\r\n                },\r\n              }}\r\n            >\r\n              Reviews\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n        <hr />\r\n      </div>\r\n      <Switch>\r\n        <Route path={`${match.path}/cast`}>\r\n          <Cast movieId={movieId} />\r\n        </Route>\r\n\r\n        <Route path={`${match.path}/reviews`}>\r\n          <Reviews movieId={movieId} />\r\n        </Route>\r\n      </Switch>\r\n    </>\r\n  );\r\n}\r\n","// import './App.css';\nimport { Route, Switch } from 'react-router';\nimport Navigation from './components/Navigation/Navigation.jsx';\nimport { HomePage } from './pages/HomePage/HomePage';\nimport { MoviesPage } from './pages/MoviesPage/MoviesPage';\nimport { NotFoundPage } from './pages/NotFoundPage/NotFoundPage';\nimport { MovieDetailsPage } from './pages/MovieDetailsPage/MovieDetailsPage';\n\nfunction App() {\n  return (\n    <>\n      <Navigation />\n      <Switch>\n        <Route exact path=\"/\">\n          <HomePage />\n        </Route>\n\n        <Route path=\"/movies\" exact>\n          <MoviesPage />\n        </Route>\n\n        <Route path=\"/movies/:movieId\">\n          <MovieDetailsPage />\n        </Route>\n\n        <Route>\n          <NotFoundPage />\n        </Route>\n      </Switch>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}