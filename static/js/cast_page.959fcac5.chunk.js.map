{"version":3,"sources":["components/Cast/Cast.jsx"],"names":["Cast","movieId","useState","casts","setCasts","useEffect","moviesAPI","fetchMovieCast","then","data","cast","console","log","length","map","profile_path","src","alt","name","width","character","id"],"mappings":"0NAQe,SAASA,EAAT,GAA4B,IAAZC,EAAW,EAAXA,QAE7B,EAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KAQA,OANAC,qBAAU,WACRC,IAAUC,eAAeN,GAASO,MAAK,SAAAC,GAAI,OAAIL,EAASK,EAAKC,WAC5D,CAACT,IAEJU,QAAQC,IAAIT,GAEY,IAAjBA,EAAMU,OACX,6BACGV,GACCA,EAAMW,KAAI,SAAAJ,GAAI,OACZ,+BACGA,EAAKK,aACJ,qBACEC,IAAG,UAnBO,mCAmBP,OAAyBN,EAAKK,cACjCE,IAAKP,EAAKQ,OAGZ,qBACEF,IAAI,qIACJC,IAAI,cACJE,MAAM,QAGV,4CAAeT,EAAKU,aACpB,4BAAIV,EAAKQ,SAdFR,EAAKW,SAmBpB","file":"static/js/cast_page.959fcac5.chunk.js","sourcesContent":["// import { Link } from 'react-router-dom';\r\n// import { useParams } from 'react-router';\r\nimport { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport moviesAPI from '../../services/moviesApi';\r\n\r\nconst BASE_IMG_URL_CAST = 'https://image.tmdb.org/t/p/w300';\r\n\r\nexport default function Cast({ movieId }) {\r\n  //   const { movieId } = useParams();\r\n  const [casts, setCasts] = useState([]);\r\n\r\n  useEffect(() => {\r\n    moviesAPI.fetchMovieCast(movieId).then(data => setCasts(data.cast));\r\n  }, [movieId]);\r\n\r\n  console.log(casts);\r\n\r\n  return casts.length !== 0 ? (\r\n    <ul>\r\n      {casts &&\r\n        casts.map(cast => (\r\n          <li key={cast.id}>\r\n            {cast.profile_path ? (\r\n              <img\r\n                src={`${BASE_IMG_URL_CAST}${cast.profile_path}`}\r\n                alt={cast.name}\r\n              />\r\n            ) : (\r\n              <img\r\n                src=\"https://www.themoviedb.org/assets/2/v4/logos/v2/blue_square_2-d537fb228cf3ded904ef09b136fe3fec72548ebc1fea3fbbd1ad9e36364db38b.svg\"\r\n                alt=\"default_img\"\r\n                width=\"300\"\r\n              />\r\n            )}\r\n            <p>Character: {cast.character}</p>\r\n            <p>{cast.name}</p>\r\n          </li>\r\n        ))}\r\n    </ul>\r\n  ) : (\r\n    <p>No information</p>\r\n  );\r\n}\r\n\r\nCast.propTypes = {\r\n  movieId: PropTypes.string.isRequired,\r\n};\r\n"],"sourceRoot":""}