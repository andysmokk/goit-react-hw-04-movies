{"version":3,"sources":["components/Reviews/Reviews.jsx"],"names":["Reviews","movieId","useState","reviews","setReviews","useEffect","moviesAPI","fetchMovieReviews","then","data","results","console","log","length","map","review","author","content","id"],"mappings":"kLA0BeA,UAvBf,YAA+B,IAAZC,EAAW,EAAXA,QACjB,EAA8BC,mBAAS,IAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KAQA,OANAC,qBAAU,WACRC,IAAUC,kBAAkBN,GAASO,MAAK,SAAAC,GAAI,OAAIL,EAAWK,EAAKC,cACjE,CAACT,IAEJU,QAAQC,IAAIT,GAEc,IAAnBA,EAAQU,OACb,6BACGV,EAAQW,KAAI,SAAAC,GAAM,OACjB,+BACE,4BAAIA,EAAOC,SACX,4BAAID,EAAOE,YAFJF,EAAOG,SAOpB","file":"static/js/reviews_page.eb7c9bd6.chunk.js","sourcesContent":["import { useState, useEffect } from 'react';\r\nimport moviesAPI from '../../services/moviesApi';\r\n\r\nfunction Reviews({ movieId }) {\r\n  const [reviews, setReviews] = useState([]);\r\n\r\n  useEffect(() => {\r\n    moviesAPI.fetchMovieReviews(movieId).then(data => setReviews(data.results));\r\n  }, [movieId]);\r\n\r\n  console.log(reviews);\r\n\r\n  return reviews.length !== 0 ? (\r\n    <ul>\r\n      {reviews.map(review => (\r\n        <li key={review.id}>\r\n          <p>{review.author}</p>\r\n          <p>{review.content}</p>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  ) : (\r\n    <p>We don't have any reviews for this movie</p>\r\n  );\r\n}\r\n\r\nexport default Reviews;\r\n"],"sourceRoot":""}